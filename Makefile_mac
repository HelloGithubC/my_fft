# Makefile for building C++ tasks with pybind11

# Compiler and flags
CXX = clang # Specific C++ compiler
BUILD_TYPE ?= Release

OMP_PATH=/opt/homebrew/opt/libomp
ifeq ($(BUILD_TYPE), Release)
    CXXFLAGS = -O2 -std=c++11 -Wall -shared -fPIC -I${OMP_PATH}/include $(shell python3 -m pybind11 --includes) -Xclang -fopenmp -undefined dynamic_lookup
else ifeq ($(BUILD_TYPE), Debug)
    CXXFLAGS = -O0 -std=c++11 -Wall -shared -fPIC $(shell python3 -m pybind11 --includes) 
else
    $(error Invalid BUILD_TYPE: $(BUILD_TYPE). Use Release or Debug.)
endif

LDFLAGS =  -lomp -L${OMP_PATH}/lib
OUT_SUFFIX = $(shell python3-config --extension-suffix)

# Directories
SRC_DIR = src
LIB_DIR = my_fft/lib

# Targets
.PHONY: all fftpower mesh clean

# Default target
all: fftpower mesh

# Build fftpower
fftpower: $(SRC_DIR)/fftpower.cpp
	$(CXX) $(CXXFLAGS) $< -o $(LIB_DIR)/fftpower${OUT_SUFFIX} $(LDFLAGS)

# Build mesh
mesh: $(SRC_DIR)/mesh.cpp
	$(CXX) $(CXXFLAGS) $< -o $(LIB_DIR)/mesh${OUT_SUFFIX} $(LDFLAGS)

# Clean up
clean:
	rm -f $(LIB_DIR)/*.so
